!function(){"use strict";var t={};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,r(o.key),o)}}function r(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:String(n)}t.p="";var o=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(e),this._isOpen=!1,this._handleEscCloseBound=this._handleEscClose.bind(this)}var e,r;return e=t,(r=[{key:"isOpen",value:function(){return this._isOpen}},{key:"open",value:function(){this._isOpen=!0,this._popupElement.classList.remove("popup_closed"),this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscCloseBound)}},{key:"close",value:function(){this._isOpen=!1,this._popupElement.classList.add("popup_closed"),this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscCloseBound)}},{key:"_handleEscClose",value:function(t){"Escape"==t.key&&this._isOpen&&this.close()}},{key:"_handleClickClose",value:function(t){(t.classList.contains("popup__close-icon")||t.classList.contains("popup"))&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("click",(function(e){t._handleClickClose(e.target)}))}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,a(r.key),r)}}function a(t){var e=function(t,e){if("object"!=i(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==i(e)?e:String(e)}function c(t,e,n){return e=p(e),function(t,e){if(e&&("object"===i(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,l()?Reflect.construct(e,n||[],p(t).constructor):e.apply(t,n))}function l(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(l=function(){return!!t})()}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=p(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},s.apply(this,arguments)}function p(t){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},p(t)}function f(t,e){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},f(t,e)}var y=function(t){function e(t,n){var r,o=n.submitForm,i=n.triggerSelector,u=n.onOpen,a=n.onClose,l=n.onStart;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=c(this,e,[t]))._popupElement=document.querySelector(t),r._form=r._popupElement.querySelector(".popup__form"),r._submitForm=o,r._triggerElement=document.querySelector(i),r._onOpen=null!=u?u:null,r._onClose=null!=a?a:null,r._onStart=null!=l?l:null,r}var n,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&f(t,e)}(e,t),n=e,(r=[{key:"close",value:function(){s(p(e.prototype),"close",this).call(this),this._onClose&&this._onClose()}},{key:"open",value:function(){s(p(e.prototype),"open",this).call(this),this._onOpen&&this._onOpen()}},{key:"getForm",value:function(){return this._form}},{key:"getPopup",value:function(){return this._popupElement}},{key:"_getInputValues",value:function(t){var e=t.target;this._submitForm(e)}},{key:"setEventListeners",value:function(){var t=this;s(p(e.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._getInputValues(e)})),this._triggerElement.addEventListener("click",(function(){t.open()}))}},{key:"setPopup",value:function(){this.setEventListeners(),this._onStart&&this._onStart()}}])&&u(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(o);function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function b(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){var r,o,i;r=t,o=e,i=n[e],(o=_(o))in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_(r.key),r)}}function _(t){var e=function(t,e){if("object"!=m(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==m(e)?e:String(e)}var d=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e,this._options=n}var e,n;return e=t,n=[{key:"_makeRequest",value:function(t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n={method:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET",headers:b({},this._options.headers)};return e&&(n.headers["Content-Type"]="application/json",n.body=JSON.stringify(e)),fetch("".concat(this._baseUrl).concat(t),n).then((function(t){return t.ok||Promise.reject("Error: ".concat(t.status)),t.json()}))}},{key:"getInitialCards",value:function(){return this._makeRequest("/cards")}},{key:"postCard",value:function(t){return this._makeRequest("/cards","POST",t)}},{key:"deleteCardById",value:function(t){return this._makeRequest("/cards/".concat(t),"DELETE")}},{key:"likeCardById",value:function(t){return this._makeRequest("/cards/likes/".concat(t),"PUT")}},{key:"deleteLikeCardById",value:function(t){return this._makeRequest("/cards/likes/".concat(t),"DELETE")}},{key:"getLoggedUser",value:function(){return this._makeRequest("/users/me")}},{key:"editUser",value:function(t){return this._makeRequest("/users/me","PATCH",t)}},{key:"editAvatar",value:function(t){return this._makeRequest("/users/me/avatar","PATCH",t)}}],n&&v(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,k(r.key),r)}}function k(t){var e=function(t,e){if("object"!=g(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==g(e)?e:String(e)}var E=function(){function t(e){var n=e.data,r=e.cardSelector,o=e.handleCardClick,i=e.handleTrashClick,u=e.api;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=n,this._cardSelector=r,this._handleCardClick=null!=o?o:null,this._handleTrashClick=i,this._api=u,this._isOwner=!1}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".posts__item").cloneNode(!0)}},{key:"_setOwner",value:function(){var t=this;this._api.getLoggedUser().then((function(e){t._isOwner=e._id===t._data.owner._id,t._isLiked=t._data.likes.find((function(t){return t._id===e._id})),t._isOwner&&t._trashButton.classList.remove("posts__trash-btn_hidden"),t._isLiked&&t._likeButton.classList.add("posts__btn-like_actived")})).catch(console.log)}},{key:"_setButtons",value:function(){this._likeButton=this._card.querySelector(".posts__btn-like"),this._trashButton=this._card.querySelector(".posts__trash-btn"),this._cardImage=this._card.querySelector(".posts__image")}},{key:"getCard",value:function(){return this._card=this._getTemplate(),this._setButtons(),this._setOwner(),this._setEventListeners(),this._likeNumberElement=this._card.querySelector(".posts__like-number"),this._card.querySelector(".posts__image").src=this._data.link,this._card.querySelector(".posts__image").alt=this._data.name,this._card.querySelector(".posts__title").textContent=this._data.name,this._likeNumberElement.textContent=this._data.likes.length,this._card}},{key:"_handleLikeButton",value:function(){var t=this;this._likeButton.classList.contains("posts__btn-like_actived")?this._api.deleteLikeCardById(this._data._id).then((function(e){t._likeButton.classList.remove("posts__btn-like_actived"),t._likeNumberElement.textContent=e.likes.length})).catch(console.log):this._api.likeCardById(this._data._id).then((function(e){t._likeButton.classList.add("posts__btn-like_actived"),t._likeNumberElement.textContent=e.likes.length})).catch(console.log)}},{key:"confirmDeleteCard",value:function(){var t=this;return this._api.deleteCardById(this._data._id).then((function(){t._card.remove()})).catch((function(t){return Promise.reject(t)}))}},{key:"_handleTrashButton",value:function(){this._handleTrashClick(this._data)}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton.addEventListener("click",(function(){t._handleLikeButton()})),this._trashButton.addEventListener("click",(function(){t._handleTrashButton()})),this._handleCardClick&&this._cardImage.addEventListener("click",(function(e){t._handleCardClick(t._data)}))}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,C(r.key),r)}}function C(t){var e=function(t,e){if("object"!=w(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==w(e)?e:String(e)}var j=function(){function t(e){var n=e.options,r=e.formElement;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._options=n,this._formElement=r,this._inputList=Array.from(this._formElement.querySelectorAll(this._options.inputSelector)),this._buttonElement=this._formElement.querySelector(this._options.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector("#".concat(t.id," + .").concat(this._options.errorClass));t.classList.add(this._options.inputErrorClass),n.textContent=e,n.classList.add(this._options.errorClassVisible)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector("#".concat(t.id," + .").concat(this._options.errorClass));t.classList.remove(this._options.inputErrorClass),e.classList.remove(this._options.errorClassVisible),e.textContent=""}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._options.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._options.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._toggleButtonState(),t._checkInputValidity(e)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&O(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function P(t){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},P(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,q(r.key),r)}}function q(t){var e=function(t,e){if("object"!=P(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==P(e)?e:String(e)}function T(t,e,n){return e=R(e),function(t,e){if(e&&("object"===P(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,B()?Reflect.construct(e,n||[],R(t).constructor):e.apply(t,n))}function B(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(B=function(){return!!t})()}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=R(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},I.apply(this,arguments)}function R(t){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},R(t)}function x(t,e){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},x(t,e)}var D=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=T(this,e,[t]))._popupElement=document.querySelector(t),r._buttonConfirmationElement=r._popupElement.querySelector(".popup__btn-confirmation"),r._handleConfirmationClick=n,r}var n,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&x(t,e)}(e,t),n=e,(r=[{key:"_confirmationClick",value:function(){this._handleConfirmationClick(),I(R(e.prototype),"close",this).call(this)}},{key:"open",value:function(){I(R(e.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var t=this;I(R(e.prototype),"setEventListeners",this).call(this),this._buttonConfirmationElement.addEventListener("click",(function(e){t._confirmationClick()}))}}])&&L(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(o);function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function F(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,A(r.key),r)}}function A(t){var e=function(t,e){if("object"!=U(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==U(e)?e:String(e)}function V(t,e,n){return e=H(e),function(t,e){if(e&&("object"===U(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,M()?Reflect.construct(e,n||[],H(t).constructor):e.apply(t,n))}function M(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(M=function(){return!!t})()}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=H(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},N.apply(this,arguments)}function H(t){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},H(t)}function z(t,e){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},z(t,e)}var G=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=V(this,e,[t]))._popupElement=document.querySelector(t),n}var n,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&z(t,e)}(e,t),n=e,(r=[{key:"open",value:function(t){N(H(e.prototype),"open",this).call(this);var n=this._popupElement.querySelector(".popup__image-title"),r=this._popupElement.querySelector(".popup__image");n.textContent=t.name,r.src=t.link,r.alt=t.name}}])&&F(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(o);function J(t){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},J(t)}function K(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,Q(r.key),r)}}function Q(t){var e=function(t,e){if("object"!=J(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=J(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==J(e)?e:String(e)}var W=function(){function t(e,n){var r=e.items,o=e.renderer,i=e.insertMethod,u=e.emptySelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n),this._insertMethod=null!=i?i:"append",this._emptyElement=document.querySelector(u),this._emptySelector=u}var e,n;return e=t,(n=[{key:"isEmpty",value:function(){return""==this._container.innerHTML?(this._emptyElement.style.display="block",!0):(this._emptyElement.style.display="none",!1)}},{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){t._renderer(e)})),this.isEmpty()}},{key:"addItem",value:function(t){"prepend"===this._insertMethod?this._container.prepend(t):this._container.append(t)}}])&&K(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function X(t){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},X(t)}function Y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,Z(r.key),r)}}function Z(t){var e=function(t,e){if("object"!=X(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=X(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==X(e)?e:String(e)}var $=function(){function t(e){var n=e.nameSelector,r=e.aboutSelector,o=e.avatarSelector,i=e.api;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(r),this._avatarElement=document.querySelector(o),this._api=i}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return this._api.getLoggedUser().then((function(t){return t})).catch(console.log)}},{key:"setAvatar",value:function(t){this._avatarElement.src=t}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about;this._nameElement.textContent=e,this._aboutElement.textContent=n}}])&&Y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),tt=(t.p,t.p,t.p,t.p,t.p,t.p,".posts__list"),et={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__btn-submit",inactiveButtonClass:"popup__btn-submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error",errorClassVisible:"popup__error_visible"},nt=new d("https://around.nomoreparties.co/v1/web_ptbr_09",{headers:{authorization:"1146a04f-7181-45eb-9b96-3a5b76f79b15","Content-Type":"application/json"}}),rt=new $({nameSelector:".profile__name",aboutSelector:".profile__about",avatarSelector:".profile__avatar",api:nt});function ot(t){new j({formElement:t,options:et}).enableValidation()}function it(t){function e(t){var e=new G(".popup_image");e.open(t),e.setEventListeners()}var n=new W({items:t,insertMethod:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append",emptySelector:".posts__empty-text",renderer:function(t){var r=new E({data:t,cardSelector:"#posts__item",handleCardClick:e,handleTrashClick:function(){!function(t){var e=new D(".popup_confirmation",(function(){t.confirmDeleteCard().then((function(){e.close(),n.isEmpty()})).catch(console.log)}));e.open(),e.setEventListeners()}(r)},api:nt});n.addItem(r.getCard())}},tt);n.renderItems()}function ut(t){if(t){t.querySelectorAll(et.inputSelector).forEach((function(e){var n=t.querySelector("#".concat(e.id," + .").concat(et.errorClass));e.classList.remove(et.inputErrorClass),n.classList.remove(et.errorClassVisible),n.textContent=""}));var e=t.querySelector(et.submitButtonSelector);e.disabled=!0,e.classList.add(et.inactiveButtonClass),t.reset()}}nt.getInitialCards().then((function(t){it(t)})).catch((function(t){return console.log(t)})),rt.getUserInfo().then((function(t){rt.setUserInfo(t),rt.setAvatar(t.avatar)})).catch(console.log);var at=new y(".popup_add-place",{triggerSelector:".profile__btn-add",submitForm:function(t){(function(t){var e={name:t.title.value,link:t.image.value},n=t.querySelector("button[type=submit]");return n.textContent="Criando...",nt.postCard(e).then((function(e){it([e],"prepend"),ut(t)})).catch((function(t){return console.log(t)})).finally((function(){n.textContent="Criar"}))})(t).then((function(){at.close()}))},onClose:function(){ut(at.getForm())},onStart:function(){ot(at.getForm())}});at.setPopup();var ct=new y(".popup_edit-profile",{triggerSelector:".profile__btn-edit",submitForm:function(t){(function(t){var e={name:t.name.value,about:t.about.value},n=t.querySelector("button[type=submit]");return n.textContent="Salvando...",nt.editUser(e).then((function(t){rt.setUserInfo(t)})).catch(console.log).finally((function(){n.textContent="Salvar"}))})(t).then((function(){ct.close()}))},onOpen:function(){var t,e;ut(ct.getForm()),t=ct.getPopup(),e=t.querySelector(".popup__form"),rt.getUserInfo().then((function(t){e.name.value=t.name,e.about.value=t.about}))},onStart:function(){ot(ct.getForm())}});ct.setPopup();var lt=new y(".popup_edit-avatar",{triggerSelector:".profile__btn-avatar-edit",submitForm:function(t){(function(t){var e=t.querySelector("button[type=submit]");return e.textContent="Salvando...",nt.editAvatar({avatar:t.link.value}).then((function(e){rt.setAvatar(e.avatar),ut(t)})).catch(console.log).finally((function(){e.textContent="Salvar"}))})(t).then((function(){lt.close()}))},onOpen:function(){ut(lt.getForm())},onStart:function(){ot(lt.getForm())}});lt.setPopup()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,